<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2019\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="16.0">
 <Targets>
  <Target Name="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB\bin\Debug\SerializationB.exe">
   <Modules>
    <Module Name="serializationb.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2023-04-15 11:38:19Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">以強式名稱金鑰簽署 'SerializationB.exe'。</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2023-04-15 11:38:19Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">以 CLSCompliant(true) 標記 'SerializationB.exe'，因為它可以公開外部可見的類型。</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="TestBinarySerialization">
       <Types>
        <Type Name="Program" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#DeSerialize()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2023-04-15 11:38:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="68">'Program.DeSerialize()' 的 'this' 參數 (或 Visual Basic 中為 'Me') 從未被使用。請將成員標記成 static (Visual Basic 中為 Shared)。如果適用，也可以在方法主體中使用 'this' 或 'Me'，或至少使用一個屬性存取子。</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="不要將常值當做已當地語系化的參數傳遞" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2023-04-15 11:38:19Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="72">方法 'Program.DeSerialize()' 在呼叫 'Console.WriteLine(string)' 時傳遞常值字串做為參數 'value'。改為從資源表格擷取下列字串: "開始還原序列化物件......"。</Issue>
            </Message>
            <Message TypeName="必須在超出範圍前處置物件" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2023-04-15 11:38:19Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="70">在方法 'Program.DeSerialize()' 中，於物件 'oFileStream' 的所有參考都超出範圍前對其呼叫 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Main(System.String[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="args" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2023-04-15 11:38:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="37">'Program.Main(string[])' 的參數 'args' 從未被使用。請移除這個參數或將它用在方法主體中。</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2023-04-15 11:38:19Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="43">因為 'int.ToString()' 的行為會隨目前使用者的地區設定而異，請將 'Program.Main(string[])' 中的這個呼叫以呼叫 'int.ToString(IFormatProvider)' 取代。如果要對使用者顯示 'int.ToString(IFormatProvider)' 的結果，請指定 'CultureInfo.CurrentCulture' 做為 'IFormatProvider' 參數。否則，如果要儲存結果供軟體存取 (例如要保存到磁碟或資料庫時)，請指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="不要將常值當做已當地語系化的參數傳遞" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2023-04-15 11:38:19Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="42">方法 'Program.Main(string[])' 在呼叫 'Console.WriteLine(string)' 時傳遞常值字串做為參數 'value'。改為從資源表格擷取下列字串: "============驗證還原序列化物件==============="。</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="44">方法 'Program.Main(string[])' 在呼叫 'Console.WriteLine(string)' 時傳遞常值字串做為參數 'value'。改為從資源表格擷取下列字串: "ClsSerializable.Demo : "。</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="43">方法 'Program.Main(string[])' 在呼叫 'Console.WriteLine(string)' 時傳遞常值字串做為參數 'value'。改為從資源表格擷取下列字串: "ClsSerializable.Number : "。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerializeBinary()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2023-04-15 11:38:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="50">'Program.SerializeBinary()' 的 'this' 參數 (或 Visual Basic 中為 'Me') 從未被使用。請將成員標記成 static (Visual Basic 中為 Shared)。如果適用，也可以在方法主體中使用 'this' 或 'Me'，或至少使用一個屬性存取子。</Issue>
            </Message>
            <Message TypeName="不要多次處置物件的 Dispose 方法" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2023-04-15 11:38:19Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="62">方法 'Program.SerializeBinary()' 中可以多次處置物件 'oFileStream'。若要避免產生 System.ObjectDisposedException，您不應該對物件呼叫多次 Dispose。: Lines: 62</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="不要將常值當做已當地語系化的參數傳遞" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2023-04-15 11:38:19Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="57">方法 'Program.SerializeBinary()' 在呼叫 'Console.WriteLine(string)' 時傳遞常值字串做為參數 'value'。改為從資源表格擷取下列字串: "二進位格式序列化......"。</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="63">方法 'Program.SerializeBinary()' 在呼叫 'Console.WriteLine(string)' 時傳遞常值字串做為參數 'value'。改為從資源表格擷取下列字串: "完成進位格式序列化......"。</Issue>
            </Message>
            <Message TypeName="必須在超出範圍前處置物件" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2023-04-15 11:38:19Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Howard\source\repos\ConsoleApp3\SerializationB" File="Program.cs" Line="54">在方法 'Program.SerializeBinary()' 中，物件 'oFileStream' 並非沿著所有例外狀況路徑處置。於物件 'oFileStream' 的所有參考都超出範圍前對其呼叫 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>組件應該具備有效的強式名稱</Name>
   <Description>可能是組件不具有強式名稱、強式名稱無效，或是強式名稱視個別電腦的組態設定而生效。組件不應該部署為目前這種狀態。這樣的情況最常見的原因為: 1) 組件的內容於簽署後經過修改。2) 簽署程序失敗。3) 組件為延遲簽署。4) 已存在的登錄機碼允許檢查通過 (否則檢查不應通過)。</Description>
   <Resolution Name="NoStrongName">以強式名稱金鑰簽署 {0}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>組件必須標記 CLSCompliantAttribute</Name>
   <Description>組件應該使用 CLSCompliant 屬性明確陳述其 CLS 標準的合規性。沒有此屬性的組件即不符合 CLS 規範。即使組件、模組或類型的某些部分不符合 CLS 規範，該組件、模組和類型本身仍可符合 CLS 規範。下列為適用規則: 1) 如果項目標記成 CLSCompliant，則任何不符合規範的成員都必須擁有 CLSCompliant 屬性，且其引數設為 false。2) 針對每個不符合 CLS 規範的成員，均須提供相當於符合 CLS 規範的替代成員。</Description>
   <Resolution Name="Default">以 CLSCompliant(true) 標記 {0}，因為它可以公開外部可見的類型。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>將成員標記為 static</Name>
   <Description>不會存取執行個體資料或不會呼叫執行個體方法的方法，可以標記成 static (Visual Basic 中為 Shared )。這麼做之後，編譯器將對這些成員發出非虛擬呼叫位置，如此將避免成員在執行階段時，為確保目前物件指標為非 null，而針對每個呼叫進行檢查。這項做法可讓重視效能的程式碼獲得可觀的效能。在某些情況下，無法存取目前物件執行個體就表示正確性發生問題。</Description>
   <Resolution Name="Default">{0} 的 'this' 參數 (或 Visual Basic 中為 'Me') 從未被使用。請將成員標記成 static (Visual Basic 中為 Shared)。如果適用，也可以在方法主體中使用 'this' 或 'Me'，或至少使用一個屬性存取子。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>必須檢閱未使用的參數</Name>
   <Description>檢閱方法主體中未使用的非虛擬方法中的參數，確認沒有由於存取失敗而進行修正的情形。未使用的參數會造成維護和效能上的負擔。有時候，違反這項規則意味著方法中有實作錯誤 (也就是說參數實際上應該使用於方法主體中)。如果這些參數基於回溯相容性的緣故必須存在，請排除這項規則的警告。</Description>
   <Resolution Name="Default">{1} 的參數 {0} 從未被使用。請移除這個參數或將它用在方法主體中。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>必須指定 IFormatProvider</Name>
   <Description>如果有多載採用 IFormatProvider 引數，則應該固定以不採用該引數的多載呼叫。執行階段中的某些方法，會在數值和字串表示之間相互進行轉換，並採用包含一或多個字元且稱為格式規範的字串參數，其會指示轉換值的方式。如果格式規範的含意因文化特性而有所不同，則格式化物件會提供字串表示中使用的實際字元。在文化特性之間的排序和比較行為不應該變更的情節中，請指定 CultureInfo.InvariantCulture，否則便指定 CultureInfo.CurrentCulture。</Description>
   <Resolution Name="IFormatProviderAlternateString">因為 {0} 的行為會隨目前使用者的地區設定而異，請將 {1} 中的這個呼叫以呼叫 {2} 取代。如果要對使用者顯示 {2} 的結果，請指定 {3} 做為 'IFormatProvider' 參數。否則，如果要儲存結果供軟體存取 (例如要保存到磁碟或資料庫時)，請指定 {4}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="不要多次處置物件的 Dispose 方法" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>不要多次處置物件的 Dispose 方法</Name>
   <Description>正確實作的 Dispose 方法即使呼叫多次，也不會擲回例外狀況。但不保證一定如此，為避免產生 System.ObjectDisposedException，您不應該對物件呼叫多次 Dispose。</Description>
   <Resolution Name="Default">方法 {1} 中可以多次處置物件 {0}。若要避免產生 System.ObjectDisposedException，您不應該對物件呼叫多次 Dispose。: Lines: 62</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="不要將常值當做已當地語系化的參數傳遞" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>不要將常值當做已當地語系化的參數傳遞</Name>
   <Description>內嵌在原始程式碼中的常值字串不容易本地語系化。請避免在一般需要本地語系化字串的情況傳遞常值字串做為引數。</Description>
   <Resolution Name="KnownValue">方法 {0} 在呼叫 {2} 時傳遞常值字串做為參數 '{1}'。改為從資源表格擷取下列字串: {3}。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="必須在超出範圍前處置物件" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>必須在超出範圍前處置物件</Name>
   <Description>如果未在可處置物件的所有參考都超出範圍前明確處置掉該物件，則該物件將在記憶體回收行程執行該物件的完成項時，於某個不定時間被處置掉。因為可能發生例外事件，導致物件的完成項無法執行，所以應改為明確處置掉物件。</Description>
   <Resolution Name="ExceptionEdge">在方法 {0} 中，物件 {1} 並非沿著所有例外狀況路徑處置。於物件 {1} 的所有參考都超出範圍前對其呼叫 System.IDisposable.Dispose。</Resolution>
   <Resolution Name="NonExceptionEdge">在方法 {0} 中，於物件 {1} 的所有參考都超出範圍前對其呼叫 System.IDisposable.Dispose。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">分類</String>
  <String Key="Certainty">確實性</String>
  <String Key="CollapseAll">全部摺疊</String>
  <String Key="CheckId">檢查 ID</String>
  <String Key="Error">錯誤</String>
  <String Key="Errors">錯誤</String>
  <String Key="ExpandAll">全部展開</String>
  <String Key="Help">說明</String>
  <String Key="Line">行</String>
  <String Key="Messages">訊息</String>
  <String Key="LocationNotStoredInPdb">[位置未儲存在 PDB]</String>
  <String Key="Project">專案</String>
  <String Key="Resolution">解析度</String>
  <String Key="Rule">規則</String>
  <String Key="RuleFile">規則檔</String>
  <String Key="RuleDescription">規則說明</String>
  <String Key="Source">來源</String>
  <String Key="Status">狀態</String>
  <String Key="Target">目標</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">Code Analysis 報告</String>
 </Localized>
</FxCopReport>
